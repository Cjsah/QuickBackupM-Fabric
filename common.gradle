import net.fabricmc.loom.task.RemapJarTask

apply plugin: 'maven-publish'
apply plugin: 'fabric-loom'
apply plugin: 'com.replaymod.preprocess'

int mcVersion = 1

preprocess {
    mcVersion = vars.get()["MC"] as int
    tabIndentation = true
}

configurations {
    modRuntimeOnly.exclude group: 'net.fabricmc', module: 'fabric-loader'
}

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/central'
    }
    maven {
        url 'https://repo1.maven.org/maven2/'
    }
}

loom {
    accessWidenerPath = file("qbm.accesswidener")
}

remapJar {
    remapperIsolation = true
}

if (mcVersion >= 11800) {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation('commons-io:commons-io:2.15.1')
    include(implementation('org.yaml:snakeyaml:2.0'))
    include(implementation('org.slf4j:slf4j-api:2.0.1'))
    include(implementation('org.quartz-scheduler:quartz:2.3.2'))
}

String versionSuffix = ''
// detect github action environment variables
// https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables
if (System.getenv("BUILD_RELEASE") != "true") {
    String buildNumber = System.getenv("BUILD_ID")
    versionSuffix += buildNumber != null ? ('+build.' + buildNumber) : '+SNAPSHOT'
}
String fullModVersion = project.mod_version + versionSuffix

version = 'v' + fullModVersion
group = project.maven_group
archivesBaseName = project.archives_base_name + '-mc' + project.minecraft_version

processResources {
    from "qbm.accesswidener"

    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        def valueMap = [
                "version": fullModVersion,
                "id": project.mod_id,
                "name": project.archives_base_name,
                "minecraft_dependency": project.minecraft_version,
        ]
        expand valueMap
    }
}

java {
    withSourcesJar()
}

jar {
    from "LICENSE"
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
    }
}